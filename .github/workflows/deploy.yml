name: CI/CD to EKS

on:
  push:
    branches: [ "main" ]

env:
  EKS_CLUSTER: my-eks-cluster
  AWS_REGION: us-west-2
  ECR_REGISTRY: 321858344734.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPO: my-app-repo

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install test dependencies
        run: |
          pip install -r app/requirements.txt pytest

      - name: Run tests
        working-directory: app
        run: pytest -q || true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Docker Image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}  # first 7 chars of commit SHA
          IMAGE_URI=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:$IMAGE_TAG
          docker build -t $IMAGE_URI app
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV  # export for next steps

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION

      - name: Apply namespace and auxiliary manifests
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/hpa.yaml
          kubectl apply -f k8s/networkpolicy.yaml

      - name: Deploy app with new image and rollout
        run: |
          kubectl set image deployment/sentiment-app \
            -n ai-sentiment sentiment-app=$IMAGE_URI
          kubectl rollout status deployment/sentiment-app \
            -n ai-sentiment --timeout=300s
